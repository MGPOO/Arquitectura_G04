//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cliente_Consola_SOAP_G04.ConversionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConversionService.IConversionService")]
    public interface IConversionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CentimetersToFeet", ReplyAction="http://tempuri.org/IConversionService/CentimetersToFeetResponse")]
        double CentimetersToFeet(double centimeters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CentimetersToFeet", ReplyAction="http://tempuri.org/IConversionService/CentimetersToFeetResponse")]
        System.Threading.Tasks.Task<double> CentimetersToFeetAsync(double centimeters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FeetToCentimeters", ReplyAction="http://tempuri.org/IConversionService/FeetToCentimetersResponse")]
        double FeetToCentimeters(double feet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FeetToCentimeters", ReplyAction="http://tempuri.org/IConversionService/FeetToCentimetersResponse")]
        System.Threading.Tasks.Task<double> FeetToCentimetersAsync(double feet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/MetersToYards", ReplyAction="http://tempuri.org/IConversionService/MetersToYardsResponse")]
        double MetersToYards(double meters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/MetersToYards", ReplyAction="http://tempuri.org/IConversionService/MetersToYardsResponse")]
        System.Threading.Tasks.Task<double> MetersToYardsAsync(double meters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/YardsToMeters", ReplyAction="http://tempuri.org/IConversionService/YardsToMetersResponse")]
        double YardsToMeters(double yards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/YardsToMeters", ReplyAction="http://tempuri.org/IConversionService/YardsToMetersResponse")]
        System.Threading.Tasks.Task<double> YardsToMetersAsync(double yards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/InchesToCentimeters", ReplyAction="http://tempuri.org/IConversionService/InchesToCentimetersResponse")]
        double InchesToCentimeters(double inches);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/InchesToCentimeters", ReplyAction="http://tempuri.org/IConversionService/InchesToCentimetersResponse")]
        System.Threading.Tasks.Task<double> InchesToCentimetersAsync(double inches);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CentimetersToInches", ReplyAction="http://tempuri.org/IConversionService/CentimetersToInchesResponse")]
        double CentimetersToInches(double centimeters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CentimetersToInches", ReplyAction="http://tempuri.org/IConversionService/CentimetersToInchesResponse")]
        System.Threading.Tasks.Task<double> CentimetersToInchesAsync(double centimeters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KilogramsToPounds", ReplyAction="http://tempuri.org/IConversionService/KilogramsToPoundsResponse")]
        double KilogramsToPounds(double kilograms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KilogramsToPounds", ReplyAction="http://tempuri.org/IConversionService/KilogramsToPoundsResponse")]
        System.Threading.Tasks.Task<double> KilogramsToPoundsAsync(double kilograms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/PoundsToKilograms", ReplyAction="http://tempuri.org/IConversionService/PoundsToKilogramsResponse")]
        double PoundsToKilograms(double pounds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/PoundsToKilograms", ReplyAction="http://tempuri.org/IConversionService/PoundsToKilogramsResponse")]
        System.Threading.Tasks.Task<double> PoundsToKilogramsAsync(double pounds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/GramsToOunces", ReplyAction="http://tempuri.org/IConversionService/GramsToOuncesResponse")]
        double GramsToOunces(double grams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/GramsToOunces", ReplyAction="http://tempuri.org/IConversionService/GramsToOuncesResponse")]
        System.Threading.Tasks.Task<double> GramsToOuncesAsync(double grams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/OuncesToGrams", ReplyAction="http://tempuri.org/IConversionService/OuncesToGramsResponse")]
        double OuncesToGrams(double ounces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/OuncesToGrams", ReplyAction="http://tempuri.org/IConversionService/OuncesToGramsResponse")]
        System.Threading.Tasks.Task<double> OuncesToGramsAsync(double ounces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusToFahrenheit", ReplyAction="http://tempuri.org/IConversionService/CelsiusToFahrenheitResponse")]
        double CelsiusToFahrenheit(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusToFahrenheit", ReplyAction="http://tempuri.org/IConversionService/CelsiusToFahrenheitResponse")]
        System.Threading.Tasks.Task<double> CelsiusToFahrenheitAsync(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FahrenheitToCelsius", ReplyAction="http://tempuri.org/IConversionService/FahrenheitToCelsiusResponse")]
        double FahrenheitToCelsius(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FahrenheitToCelsius", ReplyAction="http://tempuri.org/IConversionService/FahrenheitToCelsiusResponse")]
        System.Threading.Tasks.Task<double> FahrenheitToCelsiusAsync(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusToKelvin", ReplyAction="http://tempuri.org/IConversionService/CelsiusToKelvinResponse")]
        double CelsiusToKelvin(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/CelsiusToKelvin", ReplyAction="http://tempuri.org/IConversionService/CelsiusToKelvinResponse")]
        System.Threading.Tasks.Task<double> CelsiusToKelvinAsync(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KelvinToCelsius", ReplyAction="http://tempuri.org/IConversionService/KelvinToCelsiusResponse")]
        double KelvinToCelsius(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KelvinToCelsius", ReplyAction="http://tempuri.org/IConversionService/KelvinToCelsiusResponse")]
        System.Threading.Tasks.Task<double> KelvinToCelsiusAsync(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FahrenheitToKelvin", ReplyAction="http://tempuri.org/IConversionService/FahrenheitToKelvinResponse")]
        double FahrenheitToKelvin(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/FahrenheitToKelvin", ReplyAction="http://tempuri.org/IConversionService/FahrenheitToKelvinResponse")]
        System.Threading.Tasks.Task<double> FahrenheitToKelvinAsync(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KelvinToFahrenheit", ReplyAction="http://tempuri.org/IConversionService/KelvinToFahrenheitResponse")]
        double KelvinToFahrenheit(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversionService/KelvinToFahrenheit", ReplyAction="http://tempuri.org/IConversionService/KelvinToFahrenheitResponse")]
        System.Threading.Tasks.Task<double> KelvinToFahrenheitAsync(double kelvin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConversionServiceChannel : Cliente_Consola_SOAP_G04.ConversionService.IConversionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConversionServiceClient : System.ServiceModel.ClientBase<Cliente_Consola_SOAP_G04.ConversionService.IConversionService>, Cliente_Consola_SOAP_G04.ConversionService.IConversionService {
        
        public ConversionServiceClient() {
        }
        
        public ConversionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConversionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CentimetersToFeet(double centimeters) {
            return base.Channel.CentimetersToFeet(centimeters);
        }
        
        public System.Threading.Tasks.Task<double> CentimetersToFeetAsync(double centimeters) {
            return base.Channel.CentimetersToFeetAsync(centimeters);
        }
        
        public double FeetToCentimeters(double feet) {
            return base.Channel.FeetToCentimeters(feet);
        }
        
        public System.Threading.Tasks.Task<double> FeetToCentimetersAsync(double feet) {
            return base.Channel.FeetToCentimetersAsync(feet);
        }
        
        public double MetersToYards(double meters) {
            return base.Channel.MetersToYards(meters);
        }
        
        public System.Threading.Tasks.Task<double> MetersToYardsAsync(double meters) {
            return base.Channel.MetersToYardsAsync(meters);
        }
        
        public double YardsToMeters(double yards) {
            return base.Channel.YardsToMeters(yards);
        }
        
        public System.Threading.Tasks.Task<double> YardsToMetersAsync(double yards) {
            return base.Channel.YardsToMetersAsync(yards);
        }
        
        public double InchesToCentimeters(double inches) {
            return base.Channel.InchesToCentimeters(inches);
        }
        
        public System.Threading.Tasks.Task<double> InchesToCentimetersAsync(double inches) {
            return base.Channel.InchesToCentimetersAsync(inches);
        }
        
        public double CentimetersToInches(double centimeters) {
            return base.Channel.CentimetersToInches(centimeters);
        }
        
        public System.Threading.Tasks.Task<double> CentimetersToInchesAsync(double centimeters) {
            return base.Channel.CentimetersToInchesAsync(centimeters);
        }
        
        public double KilogramsToPounds(double kilograms) {
            return base.Channel.KilogramsToPounds(kilograms);
        }
        
        public System.Threading.Tasks.Task<double> KilogramsToPoundsAsync(double kilograms) {
            return base.Channel.KilogramsToPoundsAsync(kilograms);
        }
        
        public double PoundsToKilograms(double pounds) {
            return base.Channel.PoundsToKilograms(pounds);
        }
        
        public System.Threading.Tasks.Task<double> PoundsToKilogramsAsync(double pounds) {
            return base.Channel.PoundsToKilogramsAsync(pounds);
        }
        
        public double GramsToOunces(double grams) {
            return base.Channel.GramsToOunces(grams);
        }
        
        public System.Threading.Tasks.Task<double> GramsToOuncesAsync(double grams) {
            return base.Channel.GramsToOuncesAsync(grams);
        }
        
        public double OuncesToGrams(double ounces) {
            return base.Channel.OuncesToGrams(ounces);
        }
        
        public System.Threading.Tasks.Task<double> OuncesToGramsAsync(double ounces) {
            return base.Channel.OuncesToGramsAsync(ounces);
        }
        
        public double CelsiusToFahrenheit(double celsius) {
            return base.Channel.CelsiusToFahrenheit(celsius);
        }
        
        public System.Threading.Tasks.Task<double> CelsiusToFahrenheitAsync(double celsius) {
            return base.Channel.CelsiusToFahrenheitAsync(celsius);
        }
        
        public double FahrenheitToCelsius(double fahrenheit) {
            return base.Channel.FahrenheitToCelsius(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToCelsiusAsync(double fahrenheit) {
            return base.Channel.FahrenheitToCelsiusAsync(fahrenheit);
        }
        
        public double CelsiusToKelvin(double celsius) {
            return base.Channel.CelsiusToKelvin(celsius);
        }
        
        public System.Threading.Tasks.Task<double> CelsiusToKelvinAsync(double celsius) {
            return base.Channel.CelsiusToKelvinAsync(celsius);
        }
        
        public double KelvinToCelsius(double kelvin) {
            return base.Channel.KelvinToCelsius(kelvin);
        }
        
        public System.Threading.Tasks.Task<double> KelvinToCelsiusAsync(double kelvin) {
            return base.Channel.KelvinToCelsiusAsync(kelvin);
        }
        
        public double FahrenheitToKelvin(double fahrenheit) {
            return base.Channel.FahrenheitToKelvin(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToKelvinAsync(double fahrenheit) {
            return base.Channel.FahrenheitToKelvinAsync(fahrenheit);
        }
        
        public double KelvinToFahrenheit(double kelvin) {
            return base.Channel.KelvinToFahrenheit(kelvin);
        }
        
        public System.Threading.Tasks.Task<double> KelvinToFahrenheitAsync(double kelvin) {
            return base.Channel.KelvinToFahrenheitAsync(kelvin);
        }
    }
}
